import { LiffUTS } from '@liff/types';
import { LiffModule, ModuleContext } from '@liff/use';
export interface ExtendLiffCore {
    analytics?: LiffUTS;
}
export declare class AnalyticsModule<T> implements LiffModule<void> {
    private liffCore;
    private static get CUSTOMPLACEID_INIT();
    private static get CUSTOMTYPE();
    private static get GENERAL_UTS_ID();
    private static get GENERAL_APP_NAME();
    private static get LiffUtsLoginStatus();
    private uts;
    private utsExtra;
    private referrer;
    private injected;
    constructor(liffCore: T);
    get name(): string;
    install({ addHooks }: ModuleContext): void;
    private changeRatioToUTSFormat;
    private setExtra;
    private assignUtsExtra;
    private setVersion;
    private setLiffId;
    private setIsLoggedIn;
    private sendLiffInit;
    private setIsLiffSuccessful;
    private prepareReferrer;
    private beforeInitFinished;
    private beforeInitSuccess;
    private initError;
}
export declare const sendShareTargetPicker: (uts: LiffUTS) => void;
